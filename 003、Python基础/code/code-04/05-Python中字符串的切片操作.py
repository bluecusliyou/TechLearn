'''
什么是切片？所谓的切片就是对操作对象截取其中的一部分数据，这个过程就是切片。切片可以针对字符串、列表、元组
基本语法：
字符串名称[起始位置:结束位置:步长]，步长默认为1
备注：起始位置与结束位置都是索引下标，并不是具体的数据！！！

总结切片使用小技巧：
① 绘制图像
② 记住切片口诀（切片其实很简单，只顾头来尾不管，步长为正则正向移，步长为负则逆向移）
正向移动：就是从左向右移动
逆向移动：就是从右向左移动
注意：一定先看步长，确定移动方向，在切片

记住：如果没有开始或者没有结束解决方案
没有开始就代表从切片方向的开头开始算起（从第一个元素）
没有结束就代表截取到切片方向的结尾（到最后一个元素）

注意事项：如果切片方向与步长方向相反，则截取不到任何数据！！！
'''
numstr = '0123456789'

print(numstr[2:5])    # 234
print(numstr[2:5:1])  # 234

# 没有起始位置，只有结束位置，没有步长（默认为1）
print(numstr[:5])  # 01234

# 只有开头没有结尾，先看步长
print(numstr[1:])  # 123456789

# 特殊情况：大家容易犯错的
print(numstr[5::-1])  # 543210

# 没有开头，没有结束，只有一个冒号（相当于对整个字符串进行拷贝操作）
print(numstr[:])  # 0123456789

# 字符串翻转（原来123 => 321)
print(numstr[::-1])  # 9876543210

# 起始位置与结束位置都是负数
print(numstr[-4:-1])  # [-4:-1:1] 678

# 没有开始，只有结束，步长为1的情况（默认）
print(numstr[:-1])  # 012345678

print(numstr[2:5:-1])  # 步长为-1代表从右向左，起始位置与结束位置从左向右

# 步长为某一个数值
print(numstr[::2])  # 02468（相当于获取所有索引为偶数对应的数据）