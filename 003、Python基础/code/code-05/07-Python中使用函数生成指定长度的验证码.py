'''
案例：使用函数生成指定长度的验证码
验证码可以起到防止恶意攻击（用户登录的时候只有账号和密码） => 账号和密码都是字符串，一般就是键盘上的相关字符组合
admin
123456
admin888
有很多暴力破解器 => 不断的进行字符串组合，然后尝试破解你的账号和密码！所以引入了一个随机验证码这样一个模块！
每次运行，生成的验证码都是不同的，所以暴力破解器，没办法识别每次的验证码，所以可以起到防止恶意攻击目的！
'''
# 第四步：引入random随机模块
import random
# 1、封装一个函数，生成指定长度的随机验证码
def func(length):
    # 第一步：定义一个字符串，用于生成验证码
    str1 = '23456789abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'
    # 第二步：定义一个空字符串，专门用于接收4位长度的验证码
    code = ''
    # 第三步：生成4位长度的验证码其实就是循环4次，每次循环时要做两件事
    # 第一件事：从str1中随机获取一个字符
    # 第二件事：把获取到的随机字符，追加到code空字符串中
    for i in range(length):
        # 第五步：如何从str1中抽取一个随机字符？答：使用索引随机
        randnum = random.randint(0, len(str1) - 1)
        # 第六步：把每次得到的随机字符拼接到code变量中
        code += str1[randnum]
    # 第七步：把得到的结果作为函数的返回值
    return code

# 2、调用func函数
print(func(6))