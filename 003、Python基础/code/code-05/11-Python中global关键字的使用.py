'''
强调：在局部作用域中我们可以实现对全局变量的"访问"，但是不能实现对全局变量的修改与删除等操作，如果需要在
局部作用域中实现对全局变量的修改与删除必须使用global关键字声明全局变量！

案例：引出global关键字，我们能不能在局部作用域中实现对全局变量的"修改"操作
'''
# 2、定义一个全局变量
num = 10
# 1、定义一个函数
def func():
    # 使用global声明全局变量
    global num
    # 3、在局部作用域中尝试修改全局变量num为100
    num = 100

# 4、调用func函数
func()
print(num)  # 打印全局变量num => 10 or 100

'''
以上程序最终的返回结果依然为10，为什么呢？
① 第5行代码中的num = 10是一个全局变量
② 当func函数执行时，的确对num变量重新赋值为100，但是这个时候就没有影响全局变量，因为在函数的内部，通过num = 100
相当于在函数的里面定义了一个同名的局部变量，所以num = 10和num = 100实际上虽然同名了，但是两者一个是全局变量一个
是局部变量，两者相互隔离，不会产生任何影响！
如果我们一定要想在局部作用域中实现对全局变量的修改，必须使用global关键字，用于声明全局变量
基本语法：
global 全局变量名称
代表从当前行开始，以后使用的同名变量就是全局变量！
'''