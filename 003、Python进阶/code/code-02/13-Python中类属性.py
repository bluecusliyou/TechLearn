'''
在面向对象中，属性一般可以分为两种形式：① 对象属性（成员属性） ② 类属性
在Python代码中，一切皆对象。类也是一种特殊的对象，所以我们也可以为类来创建一个属性 => 类属性
既然类也可以拥有属性，类属性与对象属性有何区别呢？
对象属性（成员属性）是由这个类产生的对象所拥有的属性。
类属性：并不是由实例化对象拥有的，而是这个类所拥有的属性，可以理解为是所有对象共同拥有的属性，但是其不属于某一个对象。
应用场景：比如我们想知道由这个类到底生成了多少个对象，如何定义一个属性来进行统计呢？
强调一下：类属性并不是某个对象所拥有的，而是所有对象所共同组成的一个特征，我们就可以把其定义为类属性
定义类属性：
class 类名称():
    属性 = 属性值

类属性如何访问呢？既可以在类的里面也可以在类的外面
类名.类属性（推荐）
对象.类属性（也可以，但是不推荐）
'''
class Person(object):
    # 定义一个类属性：用于统计到底由这个类产生了多少个对象
    count = 0
    # 通过__init__魔术方法定义的都是对象属性
    def __init__(self, name, age):
        self.name = name
        self.age = age
        # 对类属性进行累加计数
        Person.count += 1

p1 = Person('小明', 23)
p2 = Person('小美', 18)

print(f'由Person类一共创建了{Person.count}个对象！')