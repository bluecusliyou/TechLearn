'''
案例：使用列表推导式方式以及生成器推导式方式创建一组数据，一共有10000000万条数据，从0开始，针对这个列表生成一个新元素
新元素中包含10000000万条数据，每一个值是列表中每个值的平方。
[0, 1, 2, 3] 推导 [0, 1, 4, 9]
通过以下案例分析可知：相对于列表推导式，生成器更加节省内存空间，减少能耗！
为什么会产生以下结果？
答：因为列表推导式，列表中保存的是具体的数据
   而生成器对象，其对象中保存的并不是具体的数据，而是1000万条数据的生成规则，随用随取，所以其只需要少量的空间，就可以
   达到相同的运行结果
'''
import memory_profiler as mem

list1 = list(range(10000000))

print(f'运算前内存使用情况：{mem.memory_usage()}')
# list2 = [i ** 2 for i in list1]
generator = (i ** 2 for i in list1)
print(f'运算后内存使用情况：{mem.memory_usage()}')

print(next(generator))
